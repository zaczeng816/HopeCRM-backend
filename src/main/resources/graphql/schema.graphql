enum ClientType{
    POTENTIAL
    REAL
}
enum ClientStatus{
    JOINED
    INTERESTED
    APPOINTED
    FOLLOWING_UP
    DEAL_CLOSED
}

type Client{
    id: ID
    name: String
    phone: Float
    wechatId: String
    status: String
    address: String
    note: String
    appointments: [Appointment]
}

type ClientDTO {
    id: ID
    name: String
    phone: Float
    wechatId: String
    status: String
    address: String
    note: String
    appointment: Appointment
}

type Appointment {
    id: ID
    time: String
    status: String
    personInCharge: String
    note: String
    comment: String
}

type NewAppointmentDTO {
    time: String
    status: String
    personInCharge: String
    note: String
    comment: String
}

type Query {
    allClients: [Client]
    client(id: ID!): Client
#    allClientsWithRecentUncompletedAppointment: [ClientDTO]
}

type Mutation {
    createClient(name: String!,
        phone: Float,
        wechatId: String,
#        status: ClientStatus!,
        address: String,
        note: String,
        type: ClientType): Client
}

